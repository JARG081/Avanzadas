package ui;

import com.mycompany.actividad1.dao.*;
import com.mycompany.actividad1.factory.app.AppFactory;
import com.mycompany.actividad1.model.*;
import controller.*;
import java.awt.HeadlessException;
import javax.swing.JOptionPane;
import repository.PersonaRepository;
import service.PersonaService;


/**
 *
 * @author josem
 */
public class Pantalla extends javax.swing.JFrame {
    private PersonaController personaController;
    
    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(Pantalla.class.getName());

    /**
     * Creates new form Pantalla
     */
    public Pantalla() {
        initComponents();
        PersonaRepository repo = new PersonaJdbcRepository();
        PersonaService service = new PersonaService(repo);
        personaController = new PersonaController(service);
        cargarTablaPers();
        cargarTablaFacu();
        cargarTablaPrograma();
        cargarTablaCurso();
        cargarTablaProfesores();
        cargarTablaEstudiantes();
    }
    
    private static final AppFactory factory = new AppFactory();

    private final ProfesorController   profesorController   = factory.profesorController();
    private final FacultadController   facultadController   = factory.facultadController();
    private final ProgramaController   programaController   = factory.programaController();
    private final CursoController      cursoController      = factory.cursoController();  
    private final EstudianteController estudianteController = factory.estudianteController();   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton2 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        nomPersona = new javax.swing.JTextField();
        apePersona = new javax.swing.JTextField();
        emailPersona = new javax.swing.JTextField();
        ingresPersonaBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        idPersona = new javax.swing.JTextField();
        delPersonaBtn = new javax.swing.JButton();
        buscaPersonaBtn = new javax.swing.JButton();
        actuaPersonaBtn = new javax.swing.JButton();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        idPersonaP = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        contratoProfesor = new javax.swing.JComboBox<>();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTable5 = new javax.swing.JTable();
        ingresProfBtn = new javax.swing.JButton();
        actuaProfBtn = new javax.swing.JButton();
        buscaProfBtn = new javax.swing.JButton();
        delProfBtn = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        idFacultad = new javax.swing.JTextField();
        nomFacultad = new javax.swing.JTextField();
        decFacultad = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        ingresFacuBtn = new javax.swing.JButton();
        buscaFacuBtn = new javax.swing.JButton();
        delFacuBtn = new javax.swing.JButton();
        actFacuBtn = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        idPrograma = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        nomPrograma = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        durPrograma = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        facPrograma = new javax.swing.JTextField();
        regPrograma = new javax.swing.JFormattedTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        delProgBtn = new javax.swing.JButton();
        buscaProgBtn = new javax.swing.JButton();
        actProgBtn = new javax.swing.JButton();
        ingresProgBtn = new javax.swing.JButton();
        buscaCursoBtn = new javax.swing.JButton();
        delCursoBtn = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        nomCurso = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        progCurso = new javax.swing.JTextField();
        idCurso = new javax.swing.JTextField();
        activoCurso = new javax.swing.JRadioButton();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable4 = new javax.swing.JTable();
        ingresCursoBtn = new javax.swing.JButton();
        actuaCursoBtn = new javax.swing.JButton();
        jLabel26 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        idPersonaE = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        codigoEst = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        idProgramaE = new javax.swing.JTextField();
        ingresEstBtn = new javax.swing.JButton();
        delEstBtn = new javax.swing.JButton();
        actuaEstBtn = new javax.swing.JButton();
        buscaEstBtn = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTable6 = new javax.swing.JTable();
        inscripcionesBtn = new javax.swing.JButton();

        jButton2.setText("jButton2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setText("PERSONAS");

        jLabel2.setText("Nombres");

        jLabel3.setText("Apellidos");

        jLabel4.setText("email");

        nomPersona.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nomPersonaActionPerformed(evt);
            }
        });

        ingresPersonaBtn.setText("Insertar");
        ingresPersonaBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ingresPersonaBtnActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jLabel5.setText("Id");

        idPersona.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idPersonaActionPerformed(evt);
            }
        });

        delPersonaBtn.setText("Eliminar");
        delPersonaBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delPersonaBtnActionPerformed(evt);
            }
        });

        buscaPersonaBtn.setText("Buscar");
        buscaPersonaBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscaPersonaBtnActionPerformed(evt);
            }
        });

        actuaPersonaBtn.setText("Actualizar");
        actuaPersonaBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actuaPersonaBtnActionPerformed(evt);
            }
        });

        jLabel23.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel23.setText("PROFESORES");

        jLabel24.setText("Id Persona");

        idPersonaP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idPersonaPActionPerformed(evt);
            }
        });

        jLabel25.setText("Contrato");

        contratoProfesor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Trabajo", "Servicios" }));
        contratoProfesor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                contratoProfesorActionPerformed(evt);
            }
        });

        jTable5.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable5.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jScrollPane5.setViewportView(jTable5);

        ingresProfBtn.setText("Insertar");
        ingresProfBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ingresProfBtnActionPerformed(evt);
            }
        });

        actuaProfBtn.setText("Actualizar");
        actuaProfBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actuaProfBtnActionPerformed(evt);
            }
        });

        buscaProfBtn.setText("Buscar");
        buscaProfBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscaProfBtnActionPerformed(evt);
            }
        });

        delProfBtn.setText("Eliminar");
        delProfBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delProfBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(63, 63, 63)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 419, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 377, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(ingresPersonaBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(actuaPersonaBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(buscaPersonaBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(delPersonaBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(idPersona, javax.swing.GroupLayout.DEFAULT_SIZE, 141, Short.MAX_VALUE)
                                    .addComponent(nomPersona)
                                    .addComponent(apePersona)
                                    .addComponent(emailPersona))))
                        .addGap(94, 94, 94))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel25)
                        .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(ingresProfBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(actuaProfBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(buscaProfBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(delProfBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(idPersonaP)
                        .addComponent(contratoProfesor, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(113, 113, 113))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(224, 224, 224)
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(181, 181, 181)
                        .addComponent(jLabel23)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(idPersona, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nomPersona, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(apePersona, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(emailPersona, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(68, 68, 68)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ingresPersonaBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buscaPersonaBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(delPersonaBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(actuaPersonaBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(144, 144, 144)
                .addComponent(jLabel23)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(idPersonaP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(contratoProfesor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ingresProfBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(buscaProfBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(delProfBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(actuaProfBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel24)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel25)))
                .addContainerGap(39, Short.MAX_VALUE))
        );

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel6.setText("FACULTADES");

        jLabel7.setText("Id");

        jLabel8.setText("Nombre");

        jLabel9.setText("Id Decano");

        idFacultad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idFacultadActionPerformed(evt);
            }
        });

        nomFacultad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nomFacultadActionPerformed(evt);
            }
        });

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        ingresFacuBtn.setText("Insertar");
        ingresFacuBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ingresFacuBtnActionPerformed(evt);
            }
        });

        buscaFacuBtn.setText("Buscar");
        buscaFacuBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscaFacuBtnActionPerformed(evt);
            }
        });

        delFacuBtn.setText("Eliminar");
        delFacuBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delFacuBtnActionPerformed(evt);
            }
        });

        actFacuBtn.setText("Actualizar");
        actFacuBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actFacuBtnActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel10.setText("PROGRAMAS");

        jLabel12.setText("Id");

        idPrograma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idProgramaActionPerformed(evt);
            }
        });

        jLabel13.setText("Nombre");

        nomPrograma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nomProgramaActionPerformed(evt);
            }
        });

        jLabel14.setText("Registro");

        durPrograma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                durProgramaActionPerformed(evt);
            }
        });

        jLabel15.setText("Duracion");

        jLabel16.setText("Id Facultad");

        facPrograma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                facProgramaActionPerformed(evt);
            }
        });

        regPrograma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                regProgramaActionPerformed(evt);
            }
        });

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5"
            }
        ));
        jScrollPane3.setViewportView(jTable3);

        delProgBtn.setText("Eliminar");
        delProgBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delProgBtnActionPerformed(evt);
            }
        });

        buscaProgBtn.setText("Buscar");
        buscaProgBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscaProgBtnActionPerformed(evt);
            }
        });

        actProgBtn.setText("Actualizar");
        actProgBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actProgBtnActionPerformed(evt);
            }
        });

        ingresProgBtn.setText("Insertar");
        ingresProgBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ingresProgBtnActionPerformed(evt);
            }
        });

        buscaCursoBtn.setText("Buscar");
        buscaCursoBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscaCursoBtnActionPerformed(evt);
            }
        });

        delCursoBtn.setText("Eliminar");
        delCursoBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delCursoBtnActionPerformed(evt);
            }
        });

        jLabel18.setText("Id Programa");

        jLabel17.setText("Nombre");

        nomCurso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nomCursoActionPerformed(evt);
            }
        });

        jLabel11.setText("Id");

        idCurso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idCursoActionPerformed(evt);
            }
        });

        activoCurso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                activoCursoActionPerformed(evt);
            }
        });

        jLabel19.setText("Activio");

        jLabel20.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel20.setText("CURSOS");

        jTable4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane4.setViewportView(jTable4);

        ingresCursoBtn.setText("Insertar");
        ingresCursoBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ingresCursoBtnActionPerformed(evt);
            }
        });

        actuaCursoBtn.setText("Actualizar");
        actuaCursoBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actuaCursoBtnActionPerformed(evt);
            }
        });

        jLabel26.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel26.setText("ESTUDIANTES");

        jLabel21.setText("Id Persona");

        idPersonaE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idPersonaEActionPerformed(evt);
            }
        });

        jLabel22.setText("Codigo Est");

        jLabel27.setText("Id Programa");

        ingresEstBtn.setText("Insertar");
        ingresEstBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ingresEstBtnActionPerformed(evt);
            }
        });

        delEstBtn.setText("Eliminar");
        delEstBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delEstBtnActionPerformed(evt);
            }
        });

        actuaEstBtn.setText("Actualizar");
        actuaEstBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actuaEstBtnActionPerformed(evt);
            }
        });

        buscaEstBtn.setText("Buscar");
        buscaEstBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscaEstBtnActionPerformed(evt);
            }
        });

        jTable6.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable6.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jScrollPane6.setViewportView(jTable6);

        inscripcionesBtn.setText("Inscripciones");
        inscripcionesBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inscripcionesBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(170, 170, 170)
                        .addComponent(jLabel26))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(71, 71, 71)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(182, 182, 182)
                                .addComponent(idFacultad, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(162, 162, 162)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(decFacultad, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(nomFacultad, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(179, 179, 179)
                        .addComponent(jLabel6))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(ingresFacuBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(actFacuBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(buscaFacuBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(delFacuBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel22)
                                .addComponent(jLabel21)
                                .addComponent(jLabel27))
                            .addGap(233, 233, 233)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(codigoEst, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(idProgramaE, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(idPersonaE, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(ingresEstBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(actuaEstBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(buscaEstBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(delEstBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(139, 139, 139)
                                .addComponent(jLabel10))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(178, 178, 178)
                                .addComponent(jLabel20))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(36, 36, 36)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(ingresCursoBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(actuaCursoBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(buscaCursoBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(delCursoBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(21, 21, 21)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(182, 182, 182)
                                                .addComponent(idCurso, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGap(182, 182, 182))
                                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                            .addComponent(jLabel19, javax.swing.GroupLayout.Alignment.LEADING)
                                                            .addComponent(jLabel18, javax.swing.GroupLayout.Alignment.LEADING))
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(activoCurso)
                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addComponent(progCurso)
                                                        .addComponent(nomCurso, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 447, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap(27, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(inscripcionesBtn))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(regPrograma))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(32, 32, 32)
                                .addComponent(idPrograma))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(durPrograma)
                                    .addComponent(nomPrograma)
                                    .addComponent(facPrograma)))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(ingresProgBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(actProgBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(30, 30, 30)
                                .addComponent(buscaProgBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(delProgBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(84, 84, 84))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel10))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(idFacultad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel9))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(nomFacultad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(decFacultad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(idPrograma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(nomPrograma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel15)
                            .addComponent(durPrograma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel16)
                            .addComponent(facPrograma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14)
                            .addComponent(regPrograma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ingresFacuBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(buscaFacuBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(delFacuBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(actFacuBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ingresProgBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(buscaProgBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(delProgBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(actProgBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(38, 38, 38)
                .addComponent(inscripcionesBtn)
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(jLabel26))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(idCurso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel11)
                                .addComponent(jLabel21)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel18)
                                        .addGap(6, 6, 6))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(nomCurso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel17)
                                            .addComponent(jLabel22))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(progCurso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel27))))
                                .addComponent(activoCurso))
                            .addComponent(jLabel19, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(idPersonaE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(codigoEst, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(idProgramaE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ingresEstBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(buscaEstBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(delEstBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(actuaEstBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ingresCursoBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(buscaCursoBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(delCursoBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(actuaCursoBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void nomPersonaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nomPersonaActionPerformed
    }//GEN-LAST:event_nomPersonaActionPerformed

    private void ingresPersonaBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ingresPersonaBtnActionPerformed
    try {
        personaController.insertar(
            idPersona.getText().trim(),
            nomPersona.getText().trim(),
            apePersona.getText().trim(),
            emailPersona.getText().trim()
        );
        JOptionPane.showMessageDialog(this, "Persona registrada con éxito");
        cargarTablaPers();
        jTable1.setModel(personaController.modeloTablaTodas());
        personaController.listar().forEach(System.out::println);
    } catch (IllegalArgumentException iae) {
        JOptionPane.showMessageDialog(this, iae.getMessage());
    } catch (RuntimeException ex) { 
        JOptionPane.showMessageDialog(this, "Error técnico: " + ex.getMessage());
    }


    limpiarCamposPersona();
    }//GEN-LAST:event_ingresPersonaBtnActionPerformed

    private void idPersonaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idPersonaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idPersonaActionPerformed

    private void delPersonaBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delPersonaBtnActionPerformed
    try {
        String idTxt = idPersona.getText().trim();
        Persona persona = personaController.buscar(idTxt);
        if (persona == null) {
            JOptionPane.showMessageDialog(this, "No se encontró persona con ID: " + idTxt);
            return;
        }

        jTable1.setModel(personaController.modeloTablaTodas());

        int opcion = JOptionPane.showConfirmDialog(
            this,
            "¿Está seguro que desea eliminar este registro?\n\n" +
            "ID: " + persona.getId() + "\n" +
            "Nombre: " + persona.getNombres() + "\n" +
            "Apellido: " + persona.getApellidos() + "\n" +
            "Email: " + persona.getEmail(),
            "Confirmar eliminación",
            JOptionPane.YES_NO_OPTION,
            JOptionPane.WARNING_MESSAGE
        );

        if (opcion == JOptionPane.YES_OPTION) {
            boolean ok = personaController.eliminar(idTxt);
            JOptionPane.showMessageDialog(this,
                ok ? "Se eliminó correctamente." : "No se pudo eliminar (no existe).");
            jTable1.setModel(personaController.modeloTablaTodas());
        } else {
            jTable1.setModel(personaController.modeloTablaTodas());
        }
        cargarTablaPers();
    } catch (IllegalArgumentException iae) {
        JOptionPane.showMessageDialog(this, iae.getMessage());
    } catch (RuntimeException ex) { 
        JOptionPane.showMessageDialog(this, "Error técnico: " + ex.getMessage());         
        cargarTablaPers();
    }
        limpiarCamposPersona();
    }//GEN-LAST:event_delPersonaBtnActionPerformed

    private void buscaPersonaBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscaPersonaBtnActionPerformed
        try {
            String idTxt = idPersona.getText().trim();
            if (idTxt.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Ingrese un ID para buscar");
                return;
            }

            Persona p = personaController.buscar(idTxt);
            if (p != null) {
                idPersona.setText(String.valueOf(p.getId()));
                nomPersona.setText(p.getNombres());
                apePersona.setText(p.getApellidos());
                emailPersona.setText(p.getEmail());
                JOptionPane.showMessageDialog(this, "Persona encontrada");
            } else {
                JOptionPane.showMessageDialog(this, "No se encontró persona con ID: " + idTxt);
            }
            cargarTablaPers();

        } catch (IllegalArgumentException iae) {
            JOptionPane.showMessageDialog(this, iae.getMessage());
        } catch (RuntimeException ex) { 
            JOptionPane.showMessageDialog(this, "Error técnico: " + ex.getMessage());
        }

    }//GEN-LAST:event_buscaPersonaBtnActionPerformed

    private void idFacultadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idFacultadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idFacultadActionPerformed

    private void actuaPersonaBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actuaPersonaBtnActionPerformed
    try {
        boolean actualizado = personaController.actualizar(
            idPersona.getText().trim(),
            nomPersona.getText().trim(),
            apePersona.getText().trim(),
            emailPersona.getText().trim()
        );

        JOptionPane.showMessageDialog(this,
            actualizado ? "Persona actualizada con éxito" : "No se pudo actualizar la persona");

        cargarTablaPers();
        cargarTablaFacu();
        jTable1.setModel(personaController.modeloTablaTodas());
        personaController.listar().forEach(System.out::println);

        } catch (IllegalArgumentException iae) {
            JOptionPane.showMessageDialog(this, iae.getMessage());
        } catch (RuntimeException ex) { 
            JOptionPane.showMessageDialog(this, "Error técnico: " + ex.getMessage());
        }

       limpiarCamposPersona();
    }//GEN-LAST:event_actuaPersonaBtnActionPerformed

    private void ingresFacuBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ingresFacuBtnActionPerformed
        try {
            facultadController.insertar(
                idFacultad.getText().trim(),
                nomFacultad.getText().trim(),
                decFacultad.getText().trim()
            );
            JOptionPane.showMessageDialog(this, "Facultad insertada correctamente.");
            cargarTablaFacu();
        } catch (IllegalArgumentException iae) {
            JOptionPane.showMessageDialog(this, iae.getMessage());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error al insertar: " + e.getMessage());
        } finally {
            limpiarCamposFacultad();
        }
    }//GEN-LAST:event_ingresFacuBtnActionPerformed

    private void actFacuBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actFacuBtnActionPerformed
        try {
            boolean ok = facultadController.actualizar(
                idFacultad.getText().trim(),
                nomFacultad.getText().trim(),
                decFacultad.getText().trim()
            );
            JOptionPane.showMessageDialog(this, ok ? "Facultad actualizada correctamente."
                                                   : "No se pudo actualizar la facultad.");
            cargarTablaFacu();
        } catch (IllegalArgumentException iae) {
            JOptionPane.showMessageDialog(this, iae.getMessage());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error al actualizar: " + e.getMessage());
        }
        limpiarCamposFacultad();
    }//GEN-LAST:event_actFacuBtnActionPerformed

    private void buscaFacuBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscaFacuBtnActionPerformed
        try {
            String idTxt = idFacultad.getText().trim();
            if (idTxt.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Ingrese el ID de la facultad.");
                return;
            }

            Facultad f = facultadController.buscar(idTxt);
            if (f != null) {
                idFacultad.setText(String.valueOf(f.getID()));
                nomFacultad.setText(f.getNombre());
                if (f.getDecano() != null && f.getDecano().getId() != null) {
                    decFacultad.setText(String.valueOf(f.getDecano().getId()));
                } else {
                    decFacultad.setText("");
                }
                JOptionPane.showMessageDialog(this, "Facultad encontrada.");
            } else {
                JOptionPane.showMessageDialog(this, "No se encontró la facultad con ID " + idTxt);
            }

            cargarTablaFacu();

        } catch (IllegalArgumentException iae) {
            JOptionPane.showMessageDialog(this, iae.getMessage());
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Error al buscar: " + ex.getMessage());
        }
    }//GEN-LAST:event_buscaFacuBtnActionPerformed

    private void delFacuBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delFacuBtnActionPerformed
    try {
        String idTxt = idFacultad.getText().trim();
        if (idTxt.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Ingrese el ID de la facultad.");
            return;
        }

        Facultad f = facultadController.buscar(idTxt);
        if (f == null) {
            JOptionPane.showMessageDialog(this, "No se encontró la facultad con ID " + idTxt);
            return;
        }

        String decanoNom = (f.getDecano() == null) ? "(sin decano)"
            : (f.getDecano().getNombres() + " " + f.getDecano().getApellidos());

        int opcion = JOptionPane.showConfirmDialog(
            this,
            "¿Está seguro que desea eliminar la facultad?\n\n" +
            "ID: " + f.getID() + "\n" +
            "Nombre: " + f.getNombre() + "\n" +
            "Decano: " + decanoNom,
            "Confirmar eliminación",
            JOptionPane.YES_NO_OPTION,
            JOptionPane.WARNING_MESSAGE
        );

        if (opcion == JOptionPane.YES_OPTION) {
            boolean ok = facultadController.eliminar(idTxt);
            JOptionPane.showMessageDialog(this, ok ? "Facultad eliminada correctamente."
                                                   : "No se pudo eliminar la facultad.");
            cargarTablaFacu();
        } else {
            cargarTablaFacu();
        }

    } catch (IllegalArgumentException iae) {
        JOptionPane.showMessageDialog(this, iae.getMessage());
    } catch (Exception ex) {
        JOptionPane.showMessageDialog(this, "Error al eliminar: " + ex.getMessage());
    }
    limpiarCamposFacultad();
    }//GEN-LAST:event_delFacuBtnActionPerformed

    private void nomFacultadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nomFacultadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nomFacultadActionPerformed

    private void idProgramaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idProgramaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idProgramaActionPerformed

    private void nomProgramaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nomProgramaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nomProgramaActionPerformed

    private void durProgramaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_durProgramaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_durProgramaActionPerformed

    private void facProgramaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_facProgramaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_facProgramaActionPerformed

    private void regProgramaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_regProgramaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_regProgramaActionPerformed

    private void delProgBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delProgBtnActionPerformed
        try {
            String idTxt = idPrograma.getText().trim();
            if (idTxt.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Ingrese un ID de programa para eliminar");
                return;
            }

            Programa programa = programaController.buscar(idTxt);
            if (programa == null) {
                JOptionPane.showMessageDialog(this, "No se encontró programa con ID: " + idTxt);
                return;
            }

            int opcion = JOptionPane.showConfirmDialog(
                this,
                "¿Está seguro que desea eliminar este programa?\n\n" +
                "ID: " + programa.getId() + "\n" +
                "Nombre: " + programa.getNombre() + "\n" +
                "Duración: " + programa.getDuracion() + "\n" +
                "Facultad: " + (programa.getFacultad() == null ? "" : programa.getFacultad().getNombre()) + "\n" +
                "Registro: " + programa.getRegistro(),
                "Confirmar eliminación",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.WARNING_MESSAGE
            );

            if (opcion == JOptionPane.YES_OPTION) {
                boolean eliminado = programaController.eliminar(idTxt);
                JOptionPane.showMessageDialog(this,
                    eliminado ? "Programa eliminado correctamente: " + programa.getNombre()
                              : "No se pudo eliminar. El registro ya no existe.");
                cargarTablaPrograma();
            } else {
                cargarTablaPrograma();
            }

        } catch (IllegalArgumentException iae) {
            JOptionPane.showMessageDialog(this, iae.getMessage());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
        }
        limpiarCamposPrograma();
    }//GEN-LAST:event_delProgBtnActionPerformed

    private void buscaProgBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscaProgBtnActionPerformed
        try {
            String idTxt = idPrograma.getText().trim();
            if (idTxt.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Ingrese el ID del programa.");
                return;
            }
            Programa prog = programaController.buscar(idTxt);
            if (prog != null) {
                nomPrograma.setText(prog.getNombre());
                durPrograma.setText(String.valueOf(prog.getDuracion()));
                regPrograma.setText(prog.getRegistro().toString());
                facPrograma.setText(prog.getFacultad() == null ? "" : String.valueOf(prog.getFacultad().getID()));
                JOptionPane.showMessageDialog(this, "Programa encontrado.");
            } else {
                JOptionPane.showMessageDialog(this, "Programa no encontrado.");
                cargarTablaPrograma();
            }
        } catch (IllegalArgumentException iae) {
            JOptionPane.showMessageDialog(this, iae.getMessage());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
        }
    }//GEN-LAST:event_buscaProgBtnActionPerformed

    private void actProgBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actProgBtnActionPerformed
        try {
            boolean ok = programaController.actualizar(
                idPrograma.getText().trim(),
                nomPrograma.getText().trim(),
                durPrograma.getText().trim(),
                regPrograma.getText().trim(),
                facPrograma.getText().trim()
            );
            JOptionPane.showMessageDialog(this, ok ? "Programa actualizado correctamente."
                                                   : "No se pudo actualizar el programa.");
            cargarTablaPrograma();
        } catch (IllegalArgumentException iae) {
            JOptionPane.showMessageDialog(this, iae.getMessage());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
        }
        limpiarCamposPrograma();
    }//GEN-LAST:event_actProgBtnActionPerformed

    private void ingresProgBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ingresProgBtnActionPerformed
        try {
            programaController.insertar(
                idPrograma.getText().trim(),
                nomPrograma.getText().trim(),
                durPrograma.getText().trim(),
                regPrograma.getText().trim(),
                facPrograma.getText().trim()
            );
            JOptionPane.showMessageDialog(this, "Programa insertado correctamente.");
            cargarTablaPrograma();
        } catch (IllegalArgumentException iae) {
            JOptionPane.showMessageDialog(this, iae.getMessage());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
        } finally {
            limpiarCamposPrograma();
        }
    }//GEN-LAST:event_ingresProgBtnActionPerformed

    private void ingresCursoBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ingresCursoBtnActionPerformed
        try {
            cursoController.insertar(
                idCurso.getText().trim(),
                nomCurso.getText().trim(),
                progCurso.getText().trim(),
                activoCurso.isSelected()
            );

            JOptionPane.showMessageDialog(this, "Curso insertado con éxito.");
            cargarTablaCurso();
        } catch (IllegalArgumentException iae) {
            JOptionPane.showMessageDialog(this, iae.getMessage());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
        }
        limpiarCamposCurso();
    }//GEN-LAST:event_ingresCursoBtnActionPerformed

    private void actuaCursoBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actuaCursoBtnActionPerformed
            try {
                // actualizar() devuelve boolean
                boolean ok = cursoController.actualizar(
                    idCurso.getText().trim(),
                    nomCurso.getText().trim(),
                    progCurso.getText().trim(),
                    activoCurso.isSelected()
                );

                JOptionPane.showMessageDialog(this,
                    ok ? "Curso actualizado con éxito."
                       : "No se pudo actualizar el curso.");

                cargarTablaCurso();
            } catch (IllegalArgumentException iae) {
                JOptionPane.showMessageDialog(this, iae.getMessage());
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
            }
            limpiarCamposCurso();
    }//GEN-LAST:event_actuaCursoBtnActionPerformed

    private void buscaCursoBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscaCursoBtnActionPerformed
        try {
            String idTexto = idCurso.getText().trim();
            if (idTexto.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Ingrese un ID de curso para buscar");
                return;
            }

            com.mycompany.actividad1.model.Curso curso = cursoController.buscar(idTexto);
            if (curso != null) {
                jTable4.setModel(cursoController.modeloTablaDe(curso));
            } else {
                JOptionPane.showMessageDialog(this, "No se encontró curso con ID: " + idTexto);
                cargarTablaCurso();
            }
        } catch (IllegalArgumentException iae) {
            JOptionPane.showMessageDialog(this, iae.getMessage());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
        }
    }//GEN-LAST:event_buscaCursoBtnActionPerformed

    private void delCursoBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delCursoBtnActionPerformed
    try {
        String idTxt = idCurso.getText().trim();
        if (idTxt.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Ingrese un ID de curso para eliminar");
            return;
        }

        Curso curso = cursoController.buscar(idTxt); 
        if (curso == null) {
            JOptionPane.showMessageDialog(this, "No se encontró curso con ID: " + idTxt);
            return;
        }

        String progInfo;
        if (curso.getPrograma() == null) {
            progInfo = "(sin programa)";
        } else if (curso.getPrograma().getNombre() != null) {
            progInfo = curso.getPrograma().getNombre() + " (ID: " + curso.getPrograma().getId() + ")";
        } else {
            progInfo = "ID: " + curso.getPrograma().getId();
        }

        int opcion = JOptionPane.showConfirmDialog(
            this,
            "¿Está seguro que desea eliminar este curso?\n\n" +
            "ID: " + curso.getID() + "\n" +
            "Nombre: " + curso.getNombre() + "\n" +
            "Programa: " + progInfo + "\n" +
            "Activo: " + (Boolean.TRUE.equals(curso.getActivo()) ? "Sí" : "No"),
            "Confirmar eliminación",
            JOptionPane.YES_NO_OPTION,
            JOptionPane.WARNING_MESSAGE
        );

        if (opcion == JOptionPane.YES_OPTION) {
            boolean eliminado = cursoController.eliminar(idTxt); 
            JOptionPane.showMessageDialog(this,
                eliminado ? "Curso eliminado correctamente."
                          : "No se pudo eliminar. El registro ya no existe.");
            cargarTablaCurso();
            limpiarCamposCurso();
        } else {
            cargarTablaCurso();
        }

    } catch (IllegalArgumentException iae) {
        JOptionPane.showMessageDialog(this, iae.getMessage());
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
    }
    limpiarCamposCurso();
    }//GEN-LAST:event_delCursoBtnActionPerformed

    private void nomCursoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nomCursoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nomCursoActionPerformed

    private void idCursoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idCursoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idCursoActionPerformed

    private void activoCursoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_activoCursoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_activoCursoActionPerformed

    private void idPersonaPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idPersonaPActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idPersonaPActionPerformed

    private void contratoProfesorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_contratoProfesorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_contratoProfesorActionPerformed

    private void ingresProfBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ingresProfBtnActionPerformed
    try {
            profesorController.insertar(
            idPersonaP.getText().trim(),
            contratoProfesor.getSelectedItem()
        );
        JOptionPane.showMessageDialog(this, "Profesor insertado correctamente.");
                cargarTablaProfesores();
    } catch (IllegalArgumentException iae) {
        JOptionPane.showMessageDialog(this, iae.getMessage());
    } catch (RuntimeException rex) { 
        String msg = "Error al insertar profesor: " + mensajeError(rex);
        JOptionPane.showMessageDialog(this, msg);
    }

    limpiarCamposProfesor();
}


private void btnBuscarActionPerformed() {
    }//GEN-LAST:event_ingresProfBtnActionPerformed

    private void actuaProfBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actuaProfBtnActionPerformed
    try {
        boolean ok = profesorController.actualizar(
            idPersonaP.getText().trim(),
            contratoProfesor.getSelectedItem()
        );
        JOptionPane.showMessageDialog(this,
            ok ? "Profesor actualizado correctamente."
               : "Error al actualizar profesor.");
        cargarTablaProfesores();

    } catch (IllegalArgumentException iae) {
        JOptionPane.showMessageDialog(this, iae.getMessage());
    } catch (HeadlessException e) {
        JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
    }
    limpiarCamposProfesor();
    }//GEN-LAST:event_actuaProfBtnActionPerformed

    private void buscaProfBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscaProfBtnActionPerformed
        try {
            String idTxt = idPersonaP.getText().trim();
            if (idTxt.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Ingrese un ID de persona.");
                return;
            }

            Profesor profesor = profesorController.buscar(idTxt);
            if (profesor != null) {
                idPersonaP.setText(String.valueOf(profesor.getIdPersona()));
                contratoProfesor.setSelectedItem(profesor.getContrato());
                JOptionPane.showMessageDialog(this, "Profesor encontrado");
            } else {
                JOptionPane.showMessageDialog(this, "Profesor no encontrado.");
            }

            cargarTablaProfesores(); 
        } catch (IllegalArgumentException iae) {
            JOptionPane.showMessageDialog(this, iae.getMessage());
        } catch (HeadlessException e) {
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
        }
    }//GEN-LAST:event_buscaProfBtnActionPerformed

    private void delProfBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delProfBtnActionPerformed
    try {
        String idTxt = idPersonaP.getText().trim();
        if (idTxt.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Ingrese un ID de persona.");
            return;
        }

        Profesor profesor = profesorController.buscar(idTxt);
        if (profesor == null) {
            JOptionPane.showMessageDialog(this, "Profesor no encontrado.");
            return;
        }

        String nombres = "";
        String apellidos = "";
        if (profesor.getPersona() != null) {
            nombres = profesor.getPersona().getNombres();
            apellidos = profesor.getPersona().getApellidos();
        }

        int opcion = JOptionPane.showConfirmDialog(
            this,
            "¿Está seguro que desea eliminar este registro?\n\n" +
            "ID Persona: " + profesor.getIdPersona() + "\n" +
            "Contrato: " + profesor.getContrato() +
            ((nombres.isEmpty() && apellidos.isEmpty()) ? "" : ("\nNombre: " + nombres + " " + apellidos)),
            "Confirmar eliminación",
            JOptionPane.YES_NO_OPTION,
            JOptionPane.WARNING_MESSAGE
        );

        if (opcion == JOptionPane.YES_OPTION) {
            boolean ok = profesorController.eliminar(idTxt);
            JOptionPane.showMessageDialog(this,
                ok ? "Profesor eliminado correctamente."
                   : "Error al eliminar profesor.");
            cargarTablaProfesores();
        } else {
            cargarTablaProfesores();
        }

    } catch (IllegalArgumentException iae) {
        JOptionPane.showMessageDialog(this, iae.getMessage());
    } catch (HeadlessException e) {
        JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
    }
    limpiarCamposProfesor();
    }//GEN-LAST:event_delProfBtnActionPerformed

    private void idPersonaEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idPersonaEActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idPersonaEActionPerformed

    private void ingresEstBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ingresEstBtnActionPerformed
        try {
            estudianteController.insertar(
                idPersonaE.getText().trim(),
                codigoEst.getText().trim(),
                idProgramaE.getText().trim()
            );
            JOptionPane.showMessageDialog(this, "Estudiante insertado correctamente.");
            cargarTablaEstudiantes();
            limpiarCamposEstudiante();
        } catch (IllegalArgumentException iae) {
            JOptionPane.showMessageDialog(this, iae.getMessage());
        } catch (HeadlessException e) {
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
        }
    }//GEN-LAST:event_ingresEstBtnActionPerformed

    private void actuaEstBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actuaEstBtnActionPerformed
           try {
        boolean ok = estudianteController.actualizar(
            idPersonaE.getText().trim(),
            codigoEst.getText().trim(),
            idProgramaE.getText().trim()
        );
        JOptionPane.showMessageDialog(this, ok ? "Estudiante actualizado correctamente."
                                               : "No se pudo actualizar el estudiante.");
        cargarTablaEstudiantes();
        limpiarCamposEstudiante();
    } catch (IllegalArgumentException iae) {
        JOptionPane.showMessageDialog(this, iae.getMessage());
    } catch (HeadlessException e) {
        JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
    }
    }//GEN-LAST:event_actuaEstBtnActionPerformed

    private void buscaEstBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscaEstBtnActionPerformed
            try {
        String idTxt = idPersonaE.getText().trim();
        if (idTxt.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Ingrese ID de persona.");
            return;
        }
        Estudiante e = estudianteController.buscar(idTxt);
        if (e != null) {
            idPersonaE.setText(String.valueOf(e.getId()));
            codigoEst.setText(e.getCodigo());
            idProgramaE.setText(e.getPrograma() == null ? "" : String.valueOf(e.getPrograma().getId()));
            JOptionPane.showMessageDialog(this, "Estudiante encontrado.");
        } else {
            JOptionPane.showMessageDialog(this, "No existe Estudiante con ese ID de persona.");
        }
        cargarTablaEstudiantes();
    } catch (IllegalArgumentException iae) {
        JOptionPane.showMessageDialog(this, iae.getMessage());
    } catch (HeadlessException e) {
        JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
    }
    }//GEN-LAST:event_buscaEstBtnActionPerformed

    private void delEstBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delEstBtnActionPerformed
            try {
        String idTxt = idPersonaE.getText().trim();
        if (idTxt.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Ingrese ID de persona.");
            return;
        }

        Estudiante e = estudianteController.buscar(idTxt);
        if (e == null) {
            JOptionPane.showMessageDialog(this, "No existe Estudiante con ese ID de persona.");
            return;
        }

        String progNombre = (e.getPrograma() == null) ? "(sin programa)" : e.getPrograma().getNombre();

        int opcion = JOptionPane.showConfirmDialog(
            this,
            "¿Eliminar este estudiante?\n\n" +
            "ID Persona: " + e.getId() + "\n" +
            "Nombre: " + e.getNombres() + " " + e.getApellidos() + "\n" +
            "Email: " + e.getEmail() + "\n" +
            "Código: " + e.getCodigo() + "\n" +
            "Programa: " + progNombre,
            "Confirmar eliminación",
            JOptionPane.YES_NO_OPTION,
            JOptionPane.WARNING_MESSAGE
        );

        if (opcion == JOptionPane.YES_OPTION) {
            boolean ok = estudianteController.eliminar(idTxt);
            JOptionPane.showMessageDialog(this, ok ? "Estudiante eliminado."
                                                   : "No se pudo eliminar.");
            cargarTablaEstudiantes();
            limpiarCamposEstudiante();
        } else {
            cargarTablaEstudiantes();
        }

    } catch (IllegalArgumentException iae) {
        JOptionPane.showMessageDialog(this, iae.getMessage());
    } catch (HeadlessException e) {
        JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
    }
    }//GEN-LAST:event_delEstBtnActionPerformed

    private void inscripcionesBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inscripcionesBtnActionPerformed
    ui.PantallaInscripcion win = new ui.PantallaInscripcion();
    win.setLocationRelativeTo(this);
    win.setVisible(true);
    
    }//GEN-LAST:event_inscripcionesBtnActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton actFacuBtn;
    private javax.swing.JButton actProgBtn;
    private javax.swing.JRadioButton activoCurso;
    private javax.swing.JButton actuaCursoBtn;
    private javax.swing.JButton actuaEstBtn;
    private javax.swing.JButton actuaPersonaBtn;
    private javax.swing.JButton actuaProfBtn;
    private javax.swing.JTextField apePersona;
    private javax.swing.JButton buscaCursoBtn;
    private javax.swing.JButton buscaEstBtn;
    private javax.swing.JButton buscaFacuBtn;
    private javax.swing.JButton buscaPersonaBtn;
    private javax.swing.JButton buscaProfBtn;
    private javax.swing.JButton buscaProgBtn;
    private javax.swing.JTextField codigoEst;
    private javax.swing.JComboBox<String> contratoProfesor;
    private javax.swing.JTextField decFacultad;
    private javax.swing.JButton delCursoBtn;
    private javax.swing.JButton delEstBtn;
    private javax.swing.JButton delFacuBtn;
    private javax.swing.JButton delPersonaBtn;
    private javax.swing.JButton delProfBtn;
    private javax.swing.JButton delProgBtn;
    private javax.swing.JTextField durPrograma;
    private javax.swing.JTextField emailPersona;
    private javax.swing.JTextField facPrograma;
    private javax.swing.JTextField idCurso;
    private javax.swing.JTextField idFacultad;
    private javax.swing.JTextField idPersona;
    private javax.swing.JTextField idPersonaE;
    private javax.swing.JTextField idPersonaP;
    private javax.swing.JTextField idPrograma;
    private javax.swing.JTextField idProgramaE;
    private javax.swing.JButton ingresCursoBtn;
    private javax.swing.JButton ingresEstBtn;
    private javax.swing.JButton ingresFacuBtn;
    private javax.swing.JButton ingresPersonaBtn;
    private javax.swing.JButton ingresProfBtn;
    private javax.swing.JButton ingresProgBtn;
    private javax.swing.JButton inscripcionesBtn;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JTable jTable4;
    private javax.swing.JTable jTable5;
    private javax.swing.JTable jTable6;
    private javax.swing.JTextField nomCurso;
    private javax.swing.JTextField nomFacultad;
    private javax.swing.JTextField nomPersona;
    private javax.swing.JTextField nomPrograma;
    private javax.swing.JTextField progCurso;
    private javax.swing.JFormattedTextField regPrograma;
    // End of variables declaration//GEN-END:variables

    private void cargarTablaPers() {
        try {
            jTable1.setModel(personaController.modeloTablaTodas());
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Error al cargar tabla: " + ex.getMessage());
        }
    }

    private void limpiarCamposPersona() {
        idPersona.setText("");
        nomPersona.setText("");
        apePersona.setText("");
        emailPersona.setText("");
    }



    private void cargarTablaFacu() {
        try {
            jTable2.setModel(facultadController.modeloTablaTodas());
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Error al cargar tabla: " + ex.getMessage());
        }
    }

    private void limpiarCamposFacultad() {
        idFacultad.setText("");
        nomFacultad.setText("");
        decFacultad.setText("");
    }


    private void cargarTablaPrograma() {
        try {
            jTable3.setModel(programaController.modeloTablaTodos());
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Error al cargar tabla: " + ex.getMessage());
        }
    }

    private void limpiarCamposPrograma() {
        idPrograma.setText("");
        nomPrograma.setText("");
        durPrograma.setText("");
        regPrograma.setText("");
        facPrograma.setText("");
    }


    private void cargarTablaCurso() {
        jTable4.setModel(cursoController.modeloTablaTodos());
    }


    private void limpiarCamposCurso() {
        idCurso.setText("");
        nomCurso.setText("");
        progCurso.setText("");
        activoCurso.setSelected(false);
    }

    private void cargarTablaProfesores() {
        try {
            jTable5.setModel(profesorController.modeloTablaTodos());
        } catch (RuntimeException ex) { 
            JOptionPane.showMessageDialog(this, "Error al cargar la tabla: " + mensajeError(ex));
        }
    }

    private void cargarTablaEstudiantes() {
        try {
            jTable6.setModel(estudianteController.modeloTablaTodos());
        } catch (RuntimeException ex) {
            JOptionPane.showMessageDialog(this, "Error al cargar la tabla: " + mensajeError(ex));
        }
    }

    private String mensajeError(Throwable ex) {
        Throwable cause = ex.getCause();
        return (cause != null ? cause.getMessage() : ex.getMessage());
    }

    private void limpiarCamposProfesor() {
        idPersonaP.setText("");
        contratoProfesor.setSelectedIndex(0);
    }
    private void limpiarCamposEstudiante() {
    idPersonaE.setText("");
    codigoEst.setText("");
    idProgramaE.setText("");
}

}


