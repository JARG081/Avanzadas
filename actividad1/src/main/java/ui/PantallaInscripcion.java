package ui;

import com.mycompany.actividad1.model.Inscripcion;
import controller.InscripcionController;
import javax.swing.JOptionPane;




/**
 *
 * @author josem
 */
public class PantallaInscripcion extends javax.swing.JFrame {
    
    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(PantallaInscripcion.class.getName());

    /**
     * Creates new form PantallaInscripcion
     */
    public PantallaInscripcion() {
    initComponents();
    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE); // <- clave
    setLocationRelativeTo(null);
    cargarTablaInscripciones();
    cargarTablaInscripciones();
    

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        idCursoIns = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableIns = new javax.swing.JTable();
        ingresInsfBtn = new javax.swing.JButton();
        actuaInsBtn = new javax.swing.JButton();
        buscainsBtn = new javax.swing.JButton();
        delInsBtn = new javax.swing.JButton();
        idEstudianteIns = new javax.swing.JTextField();
        anioIns = new javax.swing.JTextField();
        semestreIns = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel20.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel20.setText("INSCRIPCIONES");

        idCursoIns.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idCursoInsActionPerformed(evt);
            }
        });

        jTableIns.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTableIns);

        ingresInsfBtn.setText("Insertar");
        ingresInsfBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ingresInsfBtnActionPerformed(evt);
            }
        });

        actuaInsBtn.setText("Actualizar");
        actuaInsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actuaInsBtnActionPerformed(evt);
            }
        });

        buscainsBtn.setText("Buscar");
        buscainsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscainsBtnActionPerformed(evt);
            }
        });

        delInsBtn.setText("Eliminar");
        delInsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delInsBtnActionPerformed(evt);
            }
        });

        jLabel24.setText("Id Curso");

        jLabel25.setText("Id Estudiante");

        jLabel26.setText("Semestre");

        jLabel27.setText("AÃ±o");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(180, 180, 180)
                        .addComponent(jLabel20))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(44, 44, 44)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(ingresInsfBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel25)
                                .addGap(4, 4, 4)))
                        .addComponent(actuaInsBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(buscainsBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(idCursoIns)
                            .addComponent(idEstudianteIns)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(delInsBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(anioIns)
                            .addComponent(semestreIns))))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(jLabel20)
                .addGap(52, 52, 52)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(idCursoIns, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(idEstudianteIns, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(anioIns, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(semestreIns, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 67, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ingresInsfBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(buscainsBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(delInsBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(actuaInsBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel24)
                        .addGap(9, 9, 9)
                        .addComponent(jLabel25)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel27)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel26)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private Integer oldCursoId = null;
    private Long    oldEstId   = null;
    private Integer oldAnio    = null;
    private Integer oldSem     = null;
    private final InscripcionController inscController = new InscripcionController();
    private void ingresInsfBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ingresInsfBtnActionPerformed
            try {
                boolean ok = inscController.insertar(
                    idCursoIns.getText().trim(),
                    idEstudianteIns.getText().trim(),
                    anioIns.getText().trim(),
                    semestreIns.getText().trim()
                );
                JOptionPane.showMessageDialog(this, ok ? "InscripciÃ³n registrada."
                                                       : "No se pudo registrar la inscripciÃ³n.");
                cargarTablaInscripciones();
                limpiarCamposInscripcion();
            } catch (IllegalArgumentException iae) {
                JOptionPane.showMessageDialog(this, iae.getMessage());
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
            }
        }

        private void btnBuscarActionPerformed() {
    }//GEN-LAST:event_ingresInsfBtnActionPerformed

    private void actuaInsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actuaInsBtnActionPerformed
        try {
            if (oldCursoId == null || oldEstId == null || oldAnio == null || oldSem == null) {
                JOptionPane.showMessageDialog(this, "Primero busque la inscripciÃ³n a actualizar.");
                return;
            }
            boolean ok = inscController.actualizar(
                String.valueOf(oldCursoId), String.valueOf(oldEstId),
                String.valueOf(oldAnio),    String.valueOf(oldSem),
                idCursoIns.getText().trim(),
                idEstudianteIns.getText().trim(),
                anioIns.getText().trim(),
                semestreIns.getText().trim()
            );
            JOptionPane.showMessageDialog(this, ok ? "InscripciÃ³n actualizada."
                                                   : "No se pudo actualizar.");
            cargarTablaInscripciones();
            limpiarCamposInscripcion();
        } catch (IllegalArgumentException iae) {
            JOptionPane.showMessageDialog(this, iae.getMessage());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
        }
    }//GEN-LAST:event_actuaInsBtnActionPerformed

    private void buscainsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscainsBtnActionPerformed
        try {
            Inscripcion i = inscController.buscar(
                idCursoIns.getText().trim(),
                idEstudianteIns.getText().trim(),
                anioIns.getText().trim(),
                semestreIns.getText().trim()
            );
            if (i != null) {
                // llenar inputs
                idCursoIns.setText(String.valueOf(i.getCurso().getID()));
                idEstudianteIns.setText(String.valueOf(i.getEstudiante().getId()));
                anioIns.setText(String.valueOf(i.getAnio()));
                semestreIns.setText(String.valueOf(i.getSemestre()));

                // guardar PK vieja
                oldCursoId = i.getCurso().getID();
                oldEstId   = i.getEstudiante().getId();
                oldAnio    = i.getAnio();
                oldSem     = i.getSemestre();

                JOptionPane.showMessageDialog(this, "InscripciÃ³n encontrada.");
            } else {
                JOptionPane.showMessageDialog(this, "No se encontrÃ³ la inscripciÃ³n.");
            }
            cargarTablaInscripciones(); // tabla siempre con todo
        } catch (IllegalArgumentException iae) {
            JOptionPane.showMessageDialog(this, iae.getMessage());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
        }
    }//GEN-LAST:event_buscainsBtnActionPerformed

    private void delInsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delInsBtnActionPerformed
        try {
            // buscar para mostrar datos previos
            Inscripcion i = inscController.buscar(
                idCursoIns.getText().trim(),
                idEstudianteIns.getText().trim(),
                anioIns.getText().trim(),
                semestreIns.getText().trim()
            );
            if (i == null) {
                JOptionPane.showMessageDialog(this, "No se encontrÃ³ la inscripciÃ³n.");
                return;
            }

            String alumno = i.getEstudiante()==null ? "" :
                    (i.getEstudiante().getNombres()+" "+i.getEstudiante().getApellidos()+" ["+i.getEstudiante().getId()+"]");
            String curso = i.getCurso()==null ? "" : (i.getCurso().getNombre()+" ("+i.getCurso().getID()+")");

            int opcion = JOptionPane.showConfirmDialog(
                this,
                "Â¿Eliminar esta inscripciÃ³n?\n\n" +
                "Curso: " + curso + "\n" +
                "Estudiante: " + alumno + "\n" +
                "AÃ±o: " + i.getAnio() + "\n" +
                "Semestre: " + i.getSemestre(),
                "Confirmar eliminaciÃ³n",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.WARNING_MESSAGE
            );

            if (opcion == JOptionPane.YES_OPTION) {
                boolean ok = inscController.eliminar(
                    String.valueOf(i.getCurso().getID()),
                    String.valueOf(i.getEstudiante().getId()),
                    String.valueOf(i.getAnio()),
                    String.valueOf(i.getSemestre())
                );
                JOptionPane.showMessageDialog(this, ok ? "InscripciÃ³n eliminada."
                                                       : "No se pudo eliminar.");
                cargarTablaInscripciones();
                limpiarCamposInscripcion();
            } else {
                cargarTablaInscripciones();
            }

        } catch (IllegalArgumentException iae) {
            JOptionPane.showMessageDialog(this, iae.getMessage());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
        }
    }//GEN-LAST:event_delInsBtnActionPerformed

    private void idCursoInsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idCursoInsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idCursoInsActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton actuaInsBtn;
    private javax.swing.JTextField anioIns;
    private javax.swing.JButton buscainsBtn;
    private javax.swing.JButton delInsBtn;
    private javax.swing.JTextField idCursoIns;
    private javax.swing.JTextField idEstudianteIns;
    private javax.swing.JButton ingresInsfBtn;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableIns;
    private javax.swing.JTextField semestreIns;
    // End of variables declaration//GEN-END:variables
private void cargarTablaInscripciones() {
    try {
        jTableIns.setModel(inscController.modeloTablaTodos());
    } catch (java.sql.SQLException ex) {
        JOptionPane.showMessageDialog(this, "Error al cargar inscripciones: " + ex.getMessage());
    }
}

private void limpiarCamposInscripcion() {
    idCursoIns.setText("");
    idEstudianteIns.setText("");
    anioIns.setText("");
    semestreIns.setText("");
    oldCursoId = null;
    oldEstId   = null;
    oldAnio    = null;
    oldSem     = null;
}


}
